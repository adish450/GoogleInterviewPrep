/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        return Depth(root) != -1 ? true : false;
    }

    private int Depth(TreeNode root) {

        if (root == null) {
            return 0;
        }

        int l = 0, r = 0;

        int d1 = Depth(root.left);
        int d2 = Depth(root.right);

        if (d1 == -1 || d2 == -1) {
            return -1;
        }

        if (Math.abs(d1 - d2) > 1) {
            return -1;
        }

        return 1 + Math.max(d1, d2);

    }
}