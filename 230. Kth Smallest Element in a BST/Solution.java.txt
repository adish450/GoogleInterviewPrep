/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        if (root == null) {
            return 0;
        }
        // inorder traversal
        ArrayList<Integer> ansArray = new ArrayList<Integer>();

        inOrderTraversal(root, ansArray);

        return ansArray.get(k - 1);
    }

    private void inOrderTraversal(TreeNode node, ArrayList<Integer> ansArray) {
        if (node == null) {
            return;
        }

        inOrderTraversal(node.left, ansArray);
        ansArray.add(node.val);
        inOrderTraversal(node.right, ansArray);
    }
}