class Solution {
    public boolean canJump(int[] nums) {
        // 1D DP
        int n = nums.length;
        int[] isPossible = new int[n];
        isPossible[n - 1] = 2;

        for (int i = n - 2; i >= 0; i--) {

            int maxJump = Math.min(n - 1, i + nums[i]);

            for (int j = maxJump; j > i; j--) {
                if (isPossible[j] == 2) {
                    isPossible[i] = 2;
                    break;
                }
            }
        }

        return isPossible[0] == 2 ? true : false;
    }
}