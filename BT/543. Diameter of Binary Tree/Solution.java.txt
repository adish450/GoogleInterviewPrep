/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    private static int diameter;
    public int diameterOfBinaryTree(TreeNode root) {
        diameter = 0;
        depth(root);
        return diameter;
    }

    private int depth(TreeNode root){

        if (root == null) {
            return 0;
        }

        int d1 = depth(root.left);
        int d2 = depth(root.right);

        diameter = Math.max(diameter, d1 + d2);

        return Math.max(d1,d2) + 1;

    }
}