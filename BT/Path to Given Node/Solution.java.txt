/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> solve(TreeNode A, int B) {
        if(A==null) return new ArrayList<Integer>();
        LinkedList<Integer> ans = new LinkedList<>();
        dfs(A,B,ans);
        return new ArrayList<>(ans);
    }
    
    private boolean dfs (TreeNode A, int B, LinkedList<Integer> ans) {
        if (A == null) {
            return false;
        }
        
        if (A.val == B) {
            ans.addLast(B);
            return true;
        }
        
        ans.addLast(A.val);
        if (dfs(A.left,B,ans) || dfs(A.right,B,ans)) {
            return true;
        }
        ans.removeLast();
        return false;
        
    }
}
