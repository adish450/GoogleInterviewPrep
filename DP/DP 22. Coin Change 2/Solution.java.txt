import java.util.Arrays;

public class Solution {

	public static long countWaysToMakeChange(int denominations[], int value){
        //write your code here
		int n = denominations.length;
		long[][] dpArray = new long[n][value + 1];

		//base case  n == 0
		for (int i = 0; i <= value; i++) {
			if (i % denominations[0] == 0) {
				dpArray[0][i] = 1;
			}
		}	

		for (int i = 1; i < n; i++) {
			for (int j = 0; j <= value; j++) {
				long c1=0,c2=0;
				// take
				if (j - denominations[i] >=0)
					c1 = dpArray[i][j-denominations[i]];
				//not take
				c2 = dpArray[i-1][j];
				dpArray[i][j] = c1 + c2;
			}
		}

		return dpArray[n-1][value];

		
	}	
}