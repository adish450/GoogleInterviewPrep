import java.util.Arrays;

public class Solution {
    public static int unboundedKnapsack(int n, int w, int[] profit, int[] weight) {
        // Write your code here.
        int[][] dpArray = new int[n][w+1];
        
        for (int w1 = 0; w1 <=w ; w1++) {
            if (weight[0] <= w1) {
                dpArray[0][w1] = (int)(w1/weight[0]) * profit[0];
            }  
        }

        for (int i = 1; i < n; i++) {
            for (int j = 0; j <= w; j++) {
                int c1 = 0;
                if (weight[i] <= j)
                    c1 = dpArray[i][j - weight[i]]+ profit[i];
                int c2 = dpArray[i-1][j];

                dpArray[i][j] = Math.max(c1, c2);
            }
        }
        return dpArray[n-1][w];
    }
}
