import java.util.* ;
import java.io.*; 
public class Solution {
    public static String shortestSupersequence(String a, String b) {
        // Write your code here..
        int n1 = a.length();
		int n2 = b.length();

		int[][] dpArray = new int[n1+1][n2+1];

		for(int i = 1; i <= n1 ; i++) {
			for(int j = 1 ; j <= n2 ; j++) {
				int len1 = 0;
				if (a.charAt(i-1) == b.charAt(j-1)) {
					dpArray[i][j] = dpArray[i - 1][j - 1] + 1;
				} else {
					dpArray[i][j] = Math.max(dpArray[i - 1][j], dpArray[i][j - 1]);
				}
			}
		}

		int len = n1 + n2 - dpArray[n1][n2];
        char[] ans = new char[len];
        int index = len - 1;

        int i = n1, j = n2;

        while (i > 0 && j > 0) {
            if (a.charAt(i-1) == b.charAt(j-1)) {
                ans[index--] = a.charAt(i-1);
				i--;
                j--;
			} else if (dpArray[i - 1][j] > dpArray[i][j - 1]) {
                ans[index--] = a.charAt(i-1);
                i--;
            } else {
                ans[index--] = b.charAt(j-1);
                j--;
            }
        }

        if (j > 0) {
            for (int v = j; v > 0; v--) {
                ans[index--] = b.charAt(v-1);
            }
        }

        if (i > 0) {
            for (int v = i; v > 0; v--) {
                ans[index--] = a.charAt(v-1);
            }
        }
        
        return new String(ans);
    }

}