import java.util.Arrays;

public class Solution {

    public static int editDistance(String str1, String str2) {
        //Your code goes here
        int n = str1.length();
        int m = str2.length();

        int[][] dp = new int[n+1][m+1];
        for (int[] arr : dp) {
            Arrays.fill(arr, -1);
        }

        return editDistance(n, m, str1, str2, dp);
    }

    private static int editDistance (int n, int m, String str1, String str2, int[][] dp) {
        if (n == 0) {
            return m;
        }

        if (m == 0) {
            return n;
        }

        if (dp[n][m] != -1) {
            return dp[n][m];
        }

        if (str1.charAt(n-1) == str2.charAt(m-1)) {
            return dp[n][m] = editDistance(n-1, m-1, str1, str2, dp);
        }

        int replace = editDistance(n-1, m-1, str1, str2, dp);
        int remove = editDistance(n-1, m, str1, str2, dp);
        int insert = editDistance(n, m-1, str1, str2, dp);

        return dp[n][m] = Math.min(replace, Math.min(remove, insert)) + 1;
    }
}