import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
    public static int longestStrChain(String[] arr) {
        // Write your code here.
        int n = arr.length;
        Arrays.sort(arr, new Comparator<String>() {
			@Override
			public int compare(String s1, String s2) {
				return Integer.compare(s1.length(), s2.length());
			}
		});
		int[] dp = new int[n];
		Arrays.fill(dp, 1);

		int max = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < i; j++) {
				if (compare(arr[i], arr[j]) && dp[i] < dp[j] + 1) {
					dp[i] = dp[j] + 1;
				}
			}
			if (dp[i] > max) {
				max = dp[i];
			}
		}

		return max;
    }

    private static boolean compare (String s1, String s2) {
        if (s1.length() != s2.length() + 1) {
            return false;
        }

        int i = 0, j = 0;

        while (i < s1.length()) {
            if (j < s2.length() && s1.charAt(i) == s2.charAt(j)) {
                i++;
                j++;
            } else {
                i++;
            }
        }

        if (i == s1.length() && j == s2.length()) {
            return true;
        }

        return false;
    }
}