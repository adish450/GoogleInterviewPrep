import java.util.* ;
import java.io.*; 
public class Solution {
	public static long houseRobber(int[] valueInHouse) {
		int n = valueInHouse.length;
		int[] temp1 = new int[n-1];
		int[] temp2 = new int[n-1];

		if (n == 1){
			return valueInHouse[0];
		}

		for(int i = 0; i < n-1; i++) {
			temp1[i] = valueInHouse[i];
		}

		for(int i = 1; i < n; i++) {
			temp2[i-1] = valueInHouse[i];
		}
		return Math.max(houseRobberSupp(temp1), houseRobberSupp(temp2));
	}	

	private static long houseRobberSupp(int[] valueInHouse) {
		int n = valueInHouse.length;
		long prev = valueInHouse[0], prev2 = 0;

		for(int i = 1 ; i < n ; i++) {
			long c1 = valueInHouse[i];

			if (i > 1)
			c1 += prev2;

			long c2 = prev;
			long curri = Math.max(c1, c2);
			prev2 = prev;
			prev = curri;
		}

		return prev;
	}
}