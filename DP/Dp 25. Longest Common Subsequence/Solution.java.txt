import java.util.Arrays;

public class Solution {

	public static int lcs(String s, String t) {
		//Your code goes here
		int n1 = s.length();
		int n2 = t.length();

		if (n1 == 0 || n2 ==0) {
			return 0;
		}

		int[][] dpArray = new int[n1][n2];

		if (s.charAt(0) == t.charAt(0)) {
			dpArray[0][0] = 1;
		}
		
		for (int i = 1; i < n1 ; i++) {
			if (s.charAt(i) == t.charAt(0)) {
				dpArray[i][0] = dpArray[i - 1][0] + 1;
			} else {
				dpArray[i][0] = dpArray[i-1][0];
			}
		}

		for (int j = 1; j < n2 ; j++) {
			if (s.charAt(0) == t.charAt(j)) {
				dpArray[0][j] = dpArray[0][j-1] + 1;
			} else {
				dpArray[0][j] = dpArray[0][j-1];
			}
		}

		for(int i = 1; i < n1 ; i++) {
			for(int j = 1 ; j < n2 ; j++) {
				int len1 = 0;
				if (s.charAt(i) == t.charAt(j)) {
					len1 = dpArray[i - 1][j - 1] + 1;
				}
				int len2 = dpArray[i - 1][j];
				int len3 = dpArray[i][j-1];
				dpArray[i][j] = Math.max(len1, Math.max(len2, len3));
			}
		}

		return dpArray[n1-1][n2-1];
    }
}